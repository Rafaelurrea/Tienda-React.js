{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santiago mejia\\\\Desktop\\\\Tienda-online\\\\cliente\\\\src\\\\pages\\\\Payment\\\\PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { ShopContext } from \"../../context/shop-context\";\nimport axios from \"axios\";\nimport './payment.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { CartItem } from \"../cart/cart-item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URI = \"http://localhost:3001/users/sendEmailBuy\"; //Direccion a la que van las peticiones\n\nconst CARD_OPTIONS = {\n  //estilos para el formulario de pago\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\n\n//Funcion que nos ayuda a definir el formato del formulario de pago\nexport default function PaymentForm() {\n  _s();\n  const context = useContext(ShopContext);\n  const [success, setSucces] = useState(false); //para saber si fue un exito o no\n  const stripe = useStripe();\n  const elements = useElements();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(URI, {\n        product: {\n          amount: context.payAumount\n        } // Ajusta los datos del producto segÃºn tus necesidades\n      });\n\n      console.log([CartItem]); // Maneja la respuesta del backend como desees\n    } catch (error) {\n      console.error(error);\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      //se crea un metodo de pago por tarjeta\n      card: elements.getElement(CardElement) //se le da el elemento card eleemnent\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod; //si n hay error se almacena el if de payment method\n        const response = await axios.post(\"http://localhost:3001/payment/\", {\n          //se cre una peticion para el pago\n          amount: context.payAumount,\n          //con el total de la compra\n          id\n        });\n        if (response.data.success) {\n          console.log(\"succesful payment\");\n          setSucces(true);\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  //DiseÃ±o de nuestra pagina de pago\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"backgroundContainer\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter your card information to continue  \\uD83D\\uDCB3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"pay\",\n        onSubmit: handleSubmit,\n        children: \"Pay \\uD83D\\uDCB8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"succesful purchase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(PaymentForm, \"Hw4SBIW4vUAqOsjxsMJkTrwfIyA=\", false, function () {\n  return [useStripe, useElements, useNavigate];\n});\n_c = PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","useContext","CardElement","useElements","useStripe","ShopContext","axios","useNavigate","CartItem","URI","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","context","success","setSucces","stripe","elements","navigate","handleSubmit","e","preventDefault","response","post","product","amount","payAumount","console","log","error","paymentMethod","createPaymentMethod","type","card","getElement","id","data","message"],"sources":["C:/Users/Santiago mejia/Desktop/Tienda-online/cliente/src/pages/Payment/PaymentForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport { ShopContext } from \"../../context/shop-context\";\r\nimport axios from \"axios\";\r\nimport './payment.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CartItem } from \"../cart/cart-item\";\r\n\r\n\r\nconst URI = \"http://localhost:3001/users/sendEmailBuy\";//Direccion a la que van las peticiones\r\n\r\nconst CARD_OPTIONS = {//estilos para el formulario de pago\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"#c4f0ff\",\r\n\t\t\tcolor: \"#fff\",\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#ffc7ee\",\r\n\t\t\tcolor: \"#ffc7ee\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//Funcion que nos ayuda a definir el formato del formulario de pago\r\nexport default function PaymentForm() {\r\n    const context = useContext(ShopContext);\r\n    const [success , setSucces] = useState(false);//para saber si fue un exito o no\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            const response = await axios.post(URI, {\r\n              product: { amount: context.payAumount},// Ajusta los datos del producto segÃºn tus necesidades\r\n            });\r\n            console.log([CartItem] ); // Maneja la respuesta del backend como desees\r\n          }catch (error) {\r\n            console.error(error);\r\n          }\r\n\r\n\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: \"card\",//se crea un metodo de pago por tarjeta\r\n            card: elements.getElement(CardElement) //se le da el elemento card eleemnent\r\n        })\r\n    if(!error){\r\n        try {\r\n            const {id} = paymentMethod//si n hay error se almacena el if de payment method\r\n            const response = await axios.post(\"http://localhost:3001/payment/\", { //se cre una peticion para el pago\r\n                amount: context.payAumount, //con el total de la compra\r\n                id\r\n            });\r\n\r\n            if (response.data.success){\r\n                console.log(\"succesful payment\");\r\n                setSucces(true);\r\n                \r\n            }\r\n        }catch (error) {\r\n            console.log(\"error\",error);\r\n        }\r\n    }else {\r\n        console.log(error.message);\r\n    }\r\n\r\n}\r\n\r\n    //DiseÃ±o de nuestra pagina de pago\r\n    return (\r\n        <div >\r\n        {!success ?\r\n        <form className=\"backgroundContainer\" onSubmit={handleSubmit}>\r\n            <fieldset className=\"FormGroup\">\r\n                <h4>Enter your card information to continue  ðŸ’³</h4>\r\n                <div className=\"FormRow\">\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                </div>\r\n            </fieldset>\r\n            <button type=\"submit\" className=\"pay\" onSubmit={handleSubmit}>Pay ðŸ’¸</button> {/*boton para pagar  */}\r\n        </form>\r\n        :\r\n        <div>\r\n            <h2>succesful purchase</h2>\r\n        </div>\r\n        }\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}