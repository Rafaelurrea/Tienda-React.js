{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santiago mejia\\\\Desktop\\\\Tienda-online\\\\cliente\\\\src\\\\pages\\\\register\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './register.css';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navigate = useNavigate(); //se usa para navegar entre direcciones\n\nconst URI = 'http://localhost:3001/users/'; //direccion en la que se hacen peticiones \n\nconst Register = () => {\n  _s();\n  const [name, setName] = useState(''); //todo esto son valores que se registran en la base de datos\n  const [password, setPassword] = useState('');\n  const [adress, setAdress] = useState('');\n  const [telephone, setTelephone] = useState('');\n  const [email, setEmail] = useState('');\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n  const navigateLogin = () => {\n    navigate(`/login`); //envia al login\n  };\n\n  const navigateRegister = () => {\n    navigate(`/register`); //envia al resgiter\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const getUsers = async () => {\n    //se obtienen todos los usuarios\n    const res = await axios.get(URI);\n    setUsers(res.data);\n  };\n  const store = async e => {\n    //hace un metodo post para ingresar el usuario a la base de taods\n    e.preventDefault();\n    await axios.post(URI, {\n      user_name: name,\n      password: password,\n      adress: adress,\n      telephone: telephone,\n      email: email\n    });\n    navigateLogin();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RegisterBackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RegisterForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register \\uD83C\\uDF10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: store,\n        action: \"/auth\",\n        method: \"post\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter your username \\uD83D\\uDC65\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: e => {\n            const text = e.target.value.replace(/[^A-Za-z]/g, \"\"); // Filtra solo letras\n            if (text === e.target.value) {\n              setName(text); // Actualiza el estado name solo si solo contiene letras\n            }\n          },\n\n          type: \"text\",\n          name: \"user\",\n          id: \"user\",\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter your password \\uD83D\\uDD11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          name: \"pass\",\n          id: \"pass\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter your adress \\uD83D\\uDCEB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: adress,\n          onChange: e => setAdress(e.target.value),\n          type: \"text\",\n          name: \"pass\",\n          id: \"pass\",\n          placeholder: \"Adress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter your telephone number \\uD83D\\uDCDE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: telephone,\n          onChange: e => {\n            const numericValue = e.target.value.replace(/\\D/g, \"\"); // Filtra solo caracteres numéricos\n            setTelephone(numericValue);\n          },\n          type: \"text\",\n          name: \"pass\",\n          id: \"pass\",\n          placeholder: \"Telephone\",\n          pattern: \"[0-9]*\" // Acepta solo números\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter your E-mail \\uD83D\\uDCE7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"text\",\n          name: \"pass\",\n          id: \"pass\",\n          placeholder: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"BtnLogin\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"XlKQbMAmskgApR/aIwZkb2jDpS4=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useNavigate","axios","useState","useEffect","navigate","URI","Register","name","setName","password","setPassword","adress","setAdress","telephone","setTelephone","email","setEmail","users","setUsers","navigateLogin","navigateRegister","getUsers","res","get","data","store","e","preventDefault","post","user_name","text","target","value","replace","numericValue"],"sources":["C:/Users/Santiago mejia/Desktop/Tienda-online/cliente/src/pages/register/register.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './register.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from \"react\";\r\nconst navigate = useNavigate();//se usa para navegar entre direcciones\r\n\r\nconst URI = 'http://localhost:3001/users/'; //direccion en la que se hacen peticiones \r\n\r\nconst Register = () => {\r\n    const [name, setName] = useState(''); //todo esto son valores que se registran en la base de datos\r\n    const [password, setPassword] = useState('');\r\n    const [adress, setAdress] = useState('');\r\n    const [telephone, setTelephone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const navigate = useNavigate();\r\n    const navigateLogin = () => {\r\n        navigate(`/login`);//envia al login\r\n    }\r\n\r\n    const navigateRegister = () => {\r\n        navigate(`/register`);//envia al resgiter\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [])\r\n\r\n    const getUsers = async() => {//se obtienen todos los usuarios\r\n        const res = await axios.get(URI)\r\n        setUsers(res.data)\r\n    }\r\n\r\n    const store = async (e) => { //hace un metodo post para ingresar el usuario a la base de taods\r\n        e.preventDefault();\r\n        await axios.post(URI, {user_name: name, password: password, adress: adress, telephone: telephone, email: email });\r\n        navigateLogin();\r\n    }\r\n\r\n    return (\r\n        <div className=\"RegisterBackground\">\r\n            <div className=\"RegisterForm\">\r\n                <h2>Register 🌐</h2>\r\n                <form onSubmit={store} action=\"/auth\" method=\"post\"> {/*se llama a store en el momento de enviar el formulario */}\r\n                    <h4>Enter your username 👥</h4>\r\n                    <input\r\n                        value={name}\r\n                        onChange={(e) => {\r\n                            const text = e.target.value.replace(/[^A-Za-z]/g, \"\"); // Filtra solo letras\r\n                            if (text === e.target.value) {\r\n                            setName(text); // Actualiza el estado name solo si solo contiene letras\r\n                            }\r\n                        }}\r\n                        type=\"text\"\r\n                        name=\"user\"\r\n                        id=\"user\"\r\n                        placeholder=\"Username\"\r\n                    />\r\n                    <h4>Enter your password 🔑</h4>\r\n                    <input \r\n                    value={password}\r\n                    onChange={ (e) => setPassword((e.target.value))}\r\n                    type=\"password\" name=\"pass\" id=\"pass\" placeholder=\"Password\"/>\r\n                    <h4>Enter your adress 📫</h4>\r\n                    <input \r\n                    value={adress}\r\n                    onChange={ (e) => setAdress(e.target.value)}\r\n                    type=\"text\" name=\"pass\" id=\"pass\" placeholder=\"Adress\"/>\r\n                    <h4>Enter your telephone number 📞</h4>\r\n                    <input\r\n                    value={telephone}\r\n                    onChange={(e) => {\r\n                        const numericValue = e.target.value.replace(/\\D/g, \"\"); // Filtra solo caracteres numéricos\r\n                        setTelephone(numericValue);\r\n                    }}\r\n                    type=\"text\"\r\n                    name=\"pass\"\r\n                    id=\"pass\"\r\n                    placeholder=\"Telephone\"\r\n                    pattern=\"[0-9]*\" // Acepta solo números\r\n                    />\r\n                    <h4>Enter your E-mail 📧</h4>\r\n                    <input \r\n                    value={email}\r\n                    onChange={ (e) => setEmail(e.target.value)}\r\n                    type=\"text\" name=\"pass\" id=\"pass\" placeholder=\"E-mail\"/>\r\n                    <input type=\"submit\" className=\"BtnLogin\" value=\"Register\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}